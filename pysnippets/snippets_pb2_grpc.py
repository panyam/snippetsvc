# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from protos import snippets_pb2 as protos_dot_snippets__pb2


class SnippetServiceStub(object):
    """*
    The snippet service provides an isolated, secure, lightweight and scalable environment
    for executing snippets and returning the output of the snippets.  The use case of this is
    in embedding code samples in documentation and tutorials and ensure where a static site
    generator can submit snippets to be excuted with different versions of code and ensure
    snippets are upto date with the versions of software being documented.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateEnvironment = channel.unary_unary(
                '/protos.SnippetService/CreateEnvironment',
                request_serializer=protos_dot_snippets__pb2.CreateEnvironmentRequest.SerializeToString,
                response_deserializer=protos_dot_snippets__pb2.Environment.FromString,
                )
        self.GetEnvironments = channel.unary_unary(
                '/protos.SnippetService/GetEnvironments',
                request_serializer=protos_dot_snippets__pb2.GetEnvironmentsRequest.SerializeToString,
                response_deserializer=protos_dot_snippets__pb2.GetEnvironmentsResponse.FromString,
                )
        self.ListEnvironments = channel.unary_unary(
                '/protos.SnippetService/ListEnvironments',
                request_serializer=protos_dot_snippets__pb2.ListEnvironmentsRequest.SerializeToString,
                response_deserializer=protos_dot_snippets__pb2.ListEnvironmentsResponse.FromString,
                )
        self.UpdateEnvironment = channel.unary_unary(
                '/protos.SnippetService/UpdateEnvironment',
                request_serializer=protos_dot_snippets__pb2.UpdateEnvironmentRequest.SerializeToString,
                response_deserializer=protos_dot_snippets__pb2.UpdateEnvironmentResponse.FromString,
                )
        self.DeleteEnvironment = channel.unary_unary(
                '/protos.SnippetService/DeleteEnvironment',
                request_serializer=protos_dot_snippets__pb2.DeleteEnvironmentRequest.SerializeToString,
                response_deserializer=protos_dot_snippets__pb2.DeleteEnvironmentResponse.FromString,
                )
        self.CreateExecution = channel.unary_unary(
                '/protos.SnippetService/CreateExecution',
                request_serializer=protos_dot_snippets__pb2.CreateExecutionRequest.SerializeToString,
                response_deserializer=protos_dot_snippets__pb2.CreateExecutionResponse.FromString,
                )
        self.ListExecutions = channel.unary_unary(
                '/protos.SnippetService/ListExecutions',
                request_serializer=protos_dot_snippets__pb2.ListExecutionsRequest.SerializeToString,
                response_deserializer=protos_dot_snippets__pb2.ListExecutionsResponse.FromString,
                )
        self.DeleteExecutions = channel.unary_unary(
                '/protos.SnippetService/DeleteExecutions',
                request_serializer=protos_dot_snippets__pb2.DeleteExecutionsRequest.SerializeToString,
                response_deserializer=protos_dot_snippets__pb2.DeleteExecutionsResponse.FromString,
                )


class SnippetServiceServicer(object):
    """*
    The snippet service provides an isolated, secure, lightweight and scalable environment
    for executing snippets and returning the output of the snippets.  The use case of this is
    in embedding code samples in documentation and tutorials and ensure where a static site
    generator can submit snippets to be excuted with different versions of code and ensure
    snippets are upto date with the versions of software being documented.
    """

    def CreateEnvironment(self, request, context):
        """*
        Creates a new environment for a snippet.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetEnvironments(self, request, context):
        """*
        Gets information about the given environments.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListEnvironments(self, request, context):
        """*
        Lists all environments.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateEnvironment(self, request, context):
        """*
        Updates all environments.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteEnvironment(self, request, context):
        """*
        Cancel/Deletes environments.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateExecution(self, request, context):
        """*
        Creates a new execution for a snippet.

        option (google.api.http) = {
        post: "/v1/executions"
        body: "*"
        };
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListExecutions(self, request, context):
        """*
        Lists all executions.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteExecutions(self, request, context):
        """*
        Cancel/Deletes executions.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SnippetServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateEnvironment': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateEnvironment,
                    request_deserializer=protos_dot_snippets__pb2.CreateEnvironmentRequest.FromString,
                    response_serializer=protos_dot_snippets__pb2.Environment.SerializeToString,
            ),
            'GetEnvironments': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEnvironments,
                    request_deserializer=protos_dot_snippets__pb2.GetEnvironmentsRequest.FromString,
                    response_serializer=protos_dot_snippets__pb2.GetEnvironmentsResponse.SerializeToString,
            ),
            'ListEnvironments': grpc.unary_unary_rpc_method_handler(
                    servicer.ListEnvironments,
                    request_deserializer=protos_dot_snippets__pb2.ListEnvironmentsRequest.FromString,
                    response_serializer=protos_dot_snippets__pb2.ListEnvironmentsResponse.SerializeToString,
            ),
            'UpdateEnvironment': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateEnvironment,
                    request_deserializer=protos_dot_snippets__pb2.UpdateEnvironmentRequest.FromString,
                    response_serializer=protos_dot_snippets__pb2.UpdateEnvironmentResponse.SerializeToString,
            ),
            'DeleteEnvironment': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteEnvironment,
                    request_deserializer=protos_dot_snippets__pb2.DeleteEnvironmentRequest.FromString,
                    response_serializer=protos_dot_snippets__pb2.DeleteEnvironmentResponse.SerializeToString,
            ),
            'CreateExecution': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateExecution,
                    request_deserializer=protos_dot_snippets__pb2.CreateExecutionRequest.FromString,
                    response_serializer=protos_dot_snippets__pb2.CreateExecutionResponse.SerializeToString,
            ),
            'ListExecutions': grpc.unary_unary_rpc_method_handler(
                    servicer.ListExecutions,
                    request_deserializer=protos_dot_snippets__pb2.ListExecutionsRequest.FromString,
                    response_serializer=protos_dot_snippets__pb2.ListExecutionsResponse.SerializeToString,
            ),
            'DeleteExecutions': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteExecutions,
                    request_deserializer=protos_dot_snippets__pb2.DeleteExecutionsRequest.FromString,
                    response_serializer=protos_dot_snippets__pb2.DeleteExecutionsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'protos.SnippetService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SnippetService(object):
    """*
    The snippet service provides an isolated, secure, lightweight and scalable environment
    for executing snippets and returning the output of the snippets.  The use case of this is
    in embedding code samples in documentation and tutorials and ensure where a static site
    generator can submit snippets to be excuted with different versions of code and ensure
    snippets are upto date with the versions of software being documented.
    """

    @staticmethod
    def CreateEnvironment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protos.SnippetService/CreateEnvironment',
            protos_dot_snippets__pb2.CreateEnvironmentRequest.SerializeToString,
            protos_dot_snippets__pb2.Environment.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetEnvironments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protos.SnippetService/GetEnvironments',
            protos_dot_snippets__pb2.GetEnvironmentsRequest.SerializeToString,
            protos_dot_snippets__pb2.GetEnvironmentsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListEnvironments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protos.SnippetService/ListEnvironments',
            protos_dot_snippets__pb2.ListEnvironmentsRequest.SerializeToString,
            protos_dot_snippets__pb2.ListEnvironmentsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateEnvironment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protos.SnippetService/UpdateEnvironment',
            protos_dot_snippets__pb2.UpdateEnvironmentRequest.SerializeToString,
            protos_dot_snippets__pb2.UpdateEnvironmentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteEnvironment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protos.SnippetService/DeleteEnvironment',
            protos_dot_snippets__pb2.DeleteEnvironmentRequest.SerializeToString,
            protos_dot_snippets__pb2.DeleteEnvironmentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateExecution(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protos.SnippetService/CreateExecution',
            protos_dot_snippets__pb2.CreateExecutionRequest.SerializeToString,
            protos_dot_snippets__pb2.CreateExecutionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListExecutions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protos.SnippetService/ListExecutions',
            protos_dot_snippets__pb2.ListExecutionsRequest.SerializeToString,
            protos_dot_snippets__pb2.ListExecutionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteExecutions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protos.SnippetService/DeleteExecutions',
            protos_dot_snippets__pb2.DeleteExecutionsRequest.SerializeToString,
            protos_dot_snippets__pb2.DeleteExecutionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
